name: Django CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DB_NAME: test_db
      DB_USER: test_user
      DB_PASSWORD: test_pass
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DJANGO_SETTINGS_MODULE: messaging_app.settings
      PYTHONPATH: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r messaging_app/requirements.txt
          pip install flake8 pytest-cov

      - name: Run flake8 linting
        run: |
          echo "Running flake8 lint check..."
          flake8 messaging_app --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 messaging_app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            nc -z 127.0.0.1 3306 && echo "MySQL is up!" && break
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Run migrations
        run: |
          python manage.py migrate --noinput

      - name: Run tests with coverage
        run: |
          pytest --ds=messaging_app.settings \
                 --cov=messaging_app \
                 --cov-report=xml \
                 --cov-report=html \
                 --junitxml=test-results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: test-results.xml

      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: |
            coverage.xml
            htmlcov/
